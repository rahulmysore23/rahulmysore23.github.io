<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go on Rahul&#39;s Presence On Internet</title>
    <link>https://rahulmysore23.github.io/tags/go/</link>
    <description>Recent content in Go on Rahul&#39;s Presence On Internet</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 04 Feb 2025 01:06:28 -0600</lastBuildDate>
    <atom:link href="https://rahulmysore23.github.io/tags/go/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Building a TUI for Managing Systemd Services: A Fun Side Project</title>
      <link>https://rahulmysore23.github.io/blogs/sysdmon/</link>
      <pubDate>Tue, 04 Feb 2025 01:06:28 -0600</pubDate>
      <guid>https://rahulmysore23.github.io/blogs/sysdmon/</guid>
      <description>&lt;p&gt;A few months ago, I found myself constantly juggling multiple custom services at work. These services were binaries written in Go, designed for data observability purposes. While they were efficient at their job, managing them was a bit of a hassle. I often had to check their status, restart them, or stop them entirely using the &lt;code&gt;systemctl&lt;/code&gt; command. Typing &lt;code&gt;systemctl status &amp;lt;service&amp;gt;&lt;/code&gt; over and over again started to feel tedious. Sure, I could have created aliases, but I wanted something more interactiveâ€”a &lt;strong&gt;TUI (Terminal User Interface)&lt;/strong&gt; that would make the process smoother and more enjoyable.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
